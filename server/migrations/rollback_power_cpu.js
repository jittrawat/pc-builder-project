const db = require('../db');

async function rollback() {
  try {
    console.log('üîÑ Rollback: ‡∏•‡∏ö column Power_CPU ‡∏à‡∏≤‡∏Å‡∏ï‡∏≤‡∏£‡∏≤‡∏á cooler\n');

    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤ column ‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
    const [cols] = await db.query('SHOW COLUMNS FROM cooler WHERE Field = "Power_CPU"');
    
    if (cols.length === 0) {
      console.log('‚úÖ Column Power_CPU ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß - ‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏ó‡∏≥‡∏≠‡∏∞‡πÑ‡∏£\n');
    } else {
      console.log('üìù ‡∏•‡∏ö column Power_CPU...');
      await db.query('ALTER TABLE cooler DROP COLUMN Power_CPU');
      console.log('‚úÖ ‡∏•‡∏ö column ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à\n');
    }
    
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ú‡∏•
    const [result] = await db.query('SHOW COLUMNS FROM cooler');
    console.log('üìã Columns ‡πÉ‡∏ô cooler table:');
    result.forEach(col => {
      console.log(`  - ${col.Field} (${col.Type})`);
    });

    console.log('\n‚úÖ Rollback ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!\n');
    await db.end();
    process.exit(0);
  } catch (err) {
    console.error('‚ùå Rollback ‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß:', err.message);
    console.error(err);
    await db.end();
    process.exit(1);
  }
}

rollback();





