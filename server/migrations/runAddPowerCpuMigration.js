const db = require('../db');

async function migrate() {
  try {
    console.log('üîÑ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô migration: ‡πÄ‡∏û‡∏¥‡πà‡∏° Power_CPU column ‡πÉ‡∏ô‡∏ï‡∏≤‡∏£‡∏≤‡∏á cooler\n');

    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤ column ‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß‡∏´‡∏£‡∏∑‡∏≠‡∏¢‡∏±‡∏á
    const [cols] = await db.query('SHOW COLUMNS FROM cooler WHERE Field = "Power_CPU"');
    
    if (cols.length > 0) {
      console.log('‚úÖ Column Power_CPU ‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß\n');
    } else {
      console.log('üìù ‡πÄ‡∏û‡∏¥‡πà‡∏° column Power_CPU...');
      await db.query(`
        ALTER TABLE cooler 
        ADD COLUMN Power_CPU INT(11) DEFAULT NULL 
        COMMENT 'Maximum CPU TDP supported (Watts)'
      `);
      console.log('‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏° column ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à\n');
      
      console.log('üìù ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ï‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏Å‡πà‡∏≤...');
      await db.query(`
        UPDATE cooler 
        SET Power_CPU = 220 
        WHERE Power_CPU IS NULL
      `);
      console.log('‚úÖ ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ï‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à\n');
    }
    
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ú‡∏•
    const [result] = await db.query('SHOW COLUMNS FROM cooler');
    console.log('üìã Columns ‡πÉ‡∏ô cooler table:');
    result.forEach(col => {
      console.log(`  - ${col.Field} (${col.Type})${col.Field === 'Power_CPU' ? ' ‚úÖ NEW' : ''}`);
    });
    
    // ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á
    const [coolers] = await db.query('SELECT * FROM cooler LIMIT 3');
    console.log('\nüìä ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•:');
    coolers.forEach((c, idx) => {
      console.log(`  ${idx + 1}. Cooler_ID: ${c.cooler_ID}, Power_CPU: ${c.Power_CPU || 'NULL'}`);
    });

    console.log('\n‚úÖ Migration ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!\n');
    await db.end();
    process.exit(0);
  } catch (err) {
    console.error('‚ùå Migration ‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß:', err.message);
    console.error(err);
    await db.end();
    process.exit(1);
  }
}

migrate();
